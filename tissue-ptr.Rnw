\documentclass{article}
\usepackage{amsmath}
\usepackage{mathtools}
\usepackage{chemarrow}
\usepackage{subcaption}
\usepackage{rotating}
\usepackage[margin=.5in]{geometry}

\begin{document}

\title{Data Analysis}
\author{Alexander Franks and Nikolai Slavov}
\date{\today}
\maketitle

Introduction to analysis.

\tableofcontents
\newpage

<<results='hide',echo=FALSE,warning=FALSE,message=FALSE,label=initialize,cache=FALSE>>=

    options(stringsAsFactors=FALSE)
opts_chunk$set(cache.path = 'cache/',fig.path = 'Figs/')

library(ggplot2)
library(scales)
library(corrplot)
library(RColorBrewer)
library(mvtnorm)
library(fdrtool)
library(xtable)
library(grid)
source("util_functions.R")

## data for the primary analysis comes from Wilhelm
focus.data <- "Wilhelm"
data2 <- "Kim"

mrna <- as.matrix(read.csv("mrna.csv",row.names=1))
msplit1 <- as.matrix(read.csv("mrna_split1.csv",row.names=1))
msplit2 <- as.matrix(read.csv("mrna_split2.csv",row.names=1))

protein <- as.matrix(read.csv(sprintf("protein_%s.csv",focus.data),row.names=1))
protein2 <- as.matrix(read.csv(sprintf("protein_%s.csv",data2),row.names=1))

tissue.names <- intersect(colnames(mrna),colnames(protein))
pretty.tissue.names <- sapply(tissue.names,strFormat)
n.tissues <- length(tissue.names)

gene.names <- intersect(rownames(mrna),rownames(protein))
n.genes <- length(gene.names)

mrna <- mrna[gene.names,tissue.names]
msplit1 <- msplit1[gene.names,tissue.names]
msplit2 <- msplit2[gene.names,tissue.names]
protein <- protein[gene.names,tissue.names]

tissue.ratios <- (10^protein)/(10^mrna)
median.ratios <- apply(tissue.ratios,1,function(x) median(x,na.rm=TRUE))
prediction.ratios <- log10((10^protein)/((10^mrna)*median.ratios))
predicted.raw <- (10^mrna)*median.ratios
@



<<results='hide', fig.show='hide',label=figure-1,dependson=c("initialize"),echo=FALSE,warning=FALSE>>=

keep.indices <- which(log10(predicted.raw)!=protein)
cor.raw <- cor(log10(predicted.raw[keep.indices]),as.numeric(protein[keep.indices]))
    
png("Figs/1a_mrna_v_protein.png")
print(

    ggplot(data=data.frame(x=predicted.raw[keep.indices],y=10^as.numeric(protein[keep.indices])),aes(x=x,y=y))+
    geom_point(colour="blue",alpha=0.03)+
    scale_x_log10(breaks=10^(1:10),label=scientific_10,limits=c(10^2,10^8))+
    scale_y_log10(breaks=10^(1:10),labels=scientific_10,limits=c(10^2,10^8))+
    labs(x="Scaled mRNA",y="Measured Protein",title="")+
    annotate("text", x = 10^3, y = 10^7,label=as.character(as.expression(substitute(italic(R)[T]^2~"="~r2,list(r2=round(cor.raw^2,digits=2))))),parse=TRUE,size=10)+
    annotate("text", x = 10^3, y = 10^7.6,label=as.character(as.expression(substitute(italic(R)[T]~"="~r,list(r=round(cor.raw,digits=2))))),parse=TRUE,size=10)+
    theme(axis.title.x = element_text(face="bold",size=30),
          axis.text.x  = element_text(size=30),
          axis.title.y = element_text(face="bold",size=30),
          axis.text.y  = element_text(size=30,hjust=0)),
    )
dev.off()


rsquared.vec <- c()
negative.slopes <- c()
negative.slopes.vals <- c()
for(i in 1:nrow(protein)){
    if(sum(!is.na(predicted.raw[i,])&!is.na(protein[i,]))>1){
        lm.fit <- lm(protein[i,]~log10(predicted.raw)[i,])
        slope <- lm.fit$coefficients[2]
        rsq <- summary(lm.fit)$r.squared
        if(rsq<1 & sum(!is.na(predicted.raw[i,]*protein[i,]))>4)
            rsquared.vec <- c(rsquared.vec,rsq)
        if(slope<0){
            negative.slopes <- c(negative.slopes,i)
            negative.slopes.vals <- c(negative.slopes.vals,slope)
        }
    }
}



full.protein <- names(which(apply(protein[negative.slopes,],1,function(x) sum(!is.na(x)))==n.tissues&apply(predicted.raw[negative.slopes,],1,function(x) sum(!is.na(x)))==n.tissues))

sort(rowMeans(protein[full.protein,]))
focus.prot <- "ENSG00000111640"


mrna.vec <- as.numeric(t(log10(predicted.raw)))
protein.vec <- as.numeric(t(protein))
id <- rep(rownames(mrna),each=n.tissues)
df <- data.frame(x=mrna.vec,y=protein.vec,id=id)

mean.prot <- rowMeans(protein[full.protein,])
large.prots <- sample(names(mean.prot[mean.prot>6.5]),10)
sub.proteins <- unique(c(large.prots,sample(unique(id)[negative.slopes],100)))
       
df.sub <- df[df$id %in% sub.proteins,]
cor.segs <- cor(df.sub$x,df.sub$y,use="complete.obs")

pdf("Figs/1b_mrna_v_protein_segs_new.pdf",width=10,height=10)
print(
ggplot(data=df.sub,aes(x=x,y=y))+geom_smooth(method=lm,se=FALSE,aes(group=id),colour=alpha("black",0.5))+scale_x_continuous(breaks=1:10,label=function(x) parse(text=paste("10^", x)),limits=c(2,9))+
    scale_y_continuous(breaks=1:10,labels=function(x) parse(text=paste("10^", x)),limits=c(2,9))+
    labs(x="Scaled mRNA",y="Measured Protein")+
    annotate("text", x = 3, y = 8,label=as.character(as.expression(substitute(italic(R)[T]^2~"="~r2,list(r2=round(cor.segs^2,digits=2))))),parse=TRUE,size=10)+
    annotate("text", x = 3, y = 8.5,label=as.character(as.expression(substitute(italic(R)[T]~"="~r,list(r=round(cor.segs,digits=2))))),parse=TRUE,size=10)+
    theme(axis.title.x = element_text(face="bold",size=30),
          axis.text.x  = element_text(size=30),
          axis.title.y = element_text(face="bold",size=30),
          axis.text.y  = element_text(size=30,hjust=0))+
    geom_point(data=data.frame(x=log10(predicted.raw[focus.prot,]),y=protein[focus.prot,],Tissue=tissue.names),aes(x=x,y=y,label=length(tissue.names):1,color=Tissue),size=3)+#scale_colour_discrete(guide=FALSE)+
    theme(legend.text=element_text(size=15),legend.title.align=0.5,
          legend.background=element_rect(fill=alpha("gray", 0.5)),legend.key=element_blank(),legend.title=element_text(size=14)) +
    guides(colour = guide_legend(override.aes = list(size=5)))+
    geom_smooth(data=data.frame(x=log10(predicted.raw[focus.prot,]),y=protein[focus.prot,]),method=lm,se=FALSE,colour="black",size=1.5)+theme(legend.justification=c(1,0), legend.position=c(1,0)),
)
dev.off()

@

\begin{figure}
\centering
\begin{subfigure}{.4\textwidth}
  \centering
  \includegraphics[width=\textwidth]{\string Figs/1a_mrna_v_protein.png}
  \caption{A subfigure}
  \label{fig:sub1}
\end{subfigure}%
\begin{subfigure}{.4\textwidth}
  \centering
  \includegraphics[width=\textwidth]{\string Figs/1b_mrna_v_protein_segs_new.pdf}
  \caption{A subfigure}
  \label{fig:sub2}
\end{subfigure}
\caption{A figure with two subfigures}
\label{fig:test}
\end{figure}
  

<<results='hide', fig.show='hide',label=figure-2,dependson=c("initialize"),echo=FALSE,warning=FALSE>>=


within.indices <- which(apply(!is.na(protein*predicted.raw),1,sum)>3)
within.cors <- sapply(within.indices,function(i) cor(protein[i,],log(predicted.raw)[i,],use="pairwise.complete.obs"))
between.cors <- sapply(1:ncol(protein),function(i) cor(protein[,i],log10(predicted.raw)[,i],use="pairwise.complete.obs"))
between.cors.raw <- sapply(1:ncol(protein),function(i) cor(protein[,i],mrna[,i],use="pairwise.complete.obs"))


## 
pdf("Figs/appendix_within_hist.pdf")
ggplot(data.frame(x=within.cors))+geom_histogram(aes(x=x,fill="within"),colour="black",binwidth=0.05,size=0.1)+labs(x=expression(paste("Correlation, ", R[P])),y="",title="Across Tissue, Empirical")+
    theme(title = element_text(size=20),
          axis.title.x = element_text(face="bold",size=25),
          axis.text.x  = element_text(size=16),
          axis.text.y  = element_text(size=16,hjust=0)) +
    scale_y_continuous(limits=c(0,300))+
    guides(fill=FALSE)
dev.off()



pdf("Figs/appendix_between_hists.pdf")
ggplot(data.frame(x=between.cors,x2=between.cors.raw,labels=tissue.names))+geom_histogram(aes(x=x,fill="Scaled"),binwidth=0.03,colour="black",size=0.1)+geom_histogram(aes(x=x2,fill="Raw"),binwidth=0.03,colour="black",size=0.1)+scale_x_continuous(limits=c(-1,1))+labs(x=expression(paste("Correlation, ", R[T])),y="",title="Within Tissue, Empirical")+
    theme(title = element_text(size=20),
          axis.title.x = element_text(face="bold",size=25),
          axis.text.x  = element_text(size=16),
          axis.text.y  = element_text(size=16,hjust=0),
          legend.text=element_text(size = 15, face = "bold"),
          legend.position=c(0.15,0.85))+
    guides(fill=guide_legend(title=NULL))

dev.off()

### Histogram of R-squared
pdf("Figs/histogram-rsq.pdf")
rsq.list <- data.frame(rsq=rsquared.vec)
ggplot(rsq.list,aes(x=rsq))+geom_histogram(binwidth=.05, colour="black", fill="grey")+labs(x="R-Squared",y="Count",title="Across Tissue, Empirical")+
    theme(axis.title.x = element_text(face="bold",size=30),
          axis.text.x  = element_text(size=16),
          axis.title.y = element_text(face="bold",size=30),
          axis.text.y  = element_text(size=16,hjust=0))
dev.off()


## Fisher transformation

n.pairwise <- rowSums(!is.na(protein*predicted.raw))
n.pairwise <- n.pairwise[n.pairwise>3]
ft <- fisher.transform(within.cors)

wts <- 1/(n.pairwise-3)
wts <- wts/sum(wts)
z <- sum(wts*ft)
pop.cor <- (exp(2*z)-1)/(exp(2*z)+1)
print(sprintf("Estimated population correlation: %.3f",pop.cor))

## Q- Value analysis
z.score<- (ft-pop.cor)*sqrt(n.pairwise-3)
fd.out <- fdrtool(z.score,plot=FALSE)

head(sort(fd.out$qval),n=20)
print(sprintf("Number of q-values < 0.01: %i",sum(fd.out$qval<0.01)))
print(sprintf("Number of q-values < 0.1: %i",sum(fd.out$qval<0.1)))

## simulate correlations
sim.within.cors <- sapply(1:length(z.score),function(i) cor(rmvnorm(n=n.pairwise[i],mean=c(0,0),sigma=matrix(c(1,pop.cor,pop.cor,1),nrow=2)))[1,2])
pdf("Figs/appendix_sim_within_hist.pdf")
ggplot(data.frame(x=sim.within.cors))+geom_histogram(aes(x=x,fill="within"),colour="black",binwidth=0.05,size=0.1)+labs(x=expression(paste("Correlation, ", R[P])),y="",title=expression(paste("Across Tissue, Simulated (",rho,"=0.35)",sep="")))+
    theme(title = element_text(size=20),
          axis.title.x = element_text(face="bold",size=25),
          axis.text.x  = element_text(size=16),
          axis.text.y  = element_text(size=16,hjust=0)) +
    scale_y_continuous(limits=c(0,300))+
    guides(fill=FALSE)
dev.off()


@ 

\begin{figure}
\centering
\begin{subfigure}{.3\textwidth}
  \centering
  \includegraphics[width=\textwidth]{\string Figs/appendix_between_hists.pdf}
  \caption{A subfigure}
  \label{fig:sub1}
\end{subfigure}%
\begin{subfigure}{.3\textwidth}
  \centering
  \includegraphics[width=\textwidth]{\string Figs/appendix_within_hist.pdf}
  \caption{A subfigure}
  \label{fig:sub2}
\end{subfigure}
\begin{subfigure}{.3\textwidth}
  \centering
  \includegraphics[width=\textwidth]{\string Figs/appendix_sim_within_hist.pdf}
  \caption{}
  \label{fig:sub2}
\end{subfigure}
\caption{A figure with two subfigures}
\label{fig:test}
\end{figure}

<<results='hide',fig.show='hide',label=figure-5, dependson("initialize"),echo=FALSE,warning=FALSE>>=

n.prot <- rowSums(!is.na(protein))
sd.prot.err <- uniroot(function(x) pnorm(log10(1.5),mean=0,sd=x)-0.75,lower=0,upper=10)$root
sd.prot.tot <- sqrt(sum((n.prot-1)*apply(protein,1,function(x) var(x,na.rm=TRUE)),na.rm=TRUE)/(sum(n.prot,na.rm=TRUE)-sum(n.prot>1)))
#sd.prot.tot <- median(apply(protein,1,function(x) sd(x,na.rm=TRUE)),na.rm=TRUE)
Rprot <- 1-sd.prot.err^2/sd.prot.tot^2

n.mrna <- rowSums(!is.na(mrna))
sd.mrna.err <- uniroot(function(x) pnorm(log10(1.2),mean=0,sd=x)-0.75,lower=0,upper=10)$root
## pooled estimator
sd.mrna.tot <- sqrt(sum((n.mrna-1)*apply(mrna,1,function(x) var(x,na.rm=TRUE)),na.rm=TRUE)/(sum(n.mrna,na.rm=TRUE)-sum(n.mrna>1)))
Rmrna <- 1-sd.mrna.err^2/sd.mrna.tot^2

pdf("Figs/5e-noise-correction.pdf")
mar2 <- par()$mar
mar2[2] <- 5.1
par(mar=mar2)

curve(sapply(x,function(fc){ 1-(uniroot(function(s) pnorm(log10(fc),mean=0,sd=s)-0.75,lower=0,upper=1000)$root)^2/sd.prot.tot^2}),from=1.00,to=1.5,
      ylab="Reliability",xlab="Median Fold Error (%)",
      lwd=3,main="",
      cex.lab=2,ylim=c(0,1),col="red",xaxt="n",cex.axis=2,cex.main=2)

grid()
text(1.37,0.6,"mRNA",col="blue",cex=1.5)
text(1.40,0.9,"protein",col="red",cex=1.5)
axis(1,at=seq(1,1.5,by=0.1),labels=c(0,10,20,30,40,50),cex.axis=2)

segments(1.2,0,1.2,Rmrna,col="dark grey",lwd=3)
segments(0,Rmrna,1.2,Rmrna,col="dark grey",lwd=3)
segments(1.5,0,1.5,Rprot,col="dark grey",lwd=3)
segments(0,Rprot,1.5,Rprot,col="dark grey",lwd=3)

curve(sapply(x,function(fc){ 1-(uniroot(function(s) pnorm(log10(fc),mean=0,sd=s)-0.75,lower=0,upper=1000)$root)^2/sd.mrna.tot^2}),from=1.00,to=1.5,cex.lab=2,lwd=3,add=TRUE,col="blue")

dev.off()

corrected.cor <- pop.cor/(Rprot*Rmrna)
corrected.rsq <- corrected.cor^2

Rprot.grid <- seq(pop.cor^2,1,by=0.01)
Rmrna.grid <- seq(pop.cor^2,1,by=0.01)
Rgrid <- expand.grid(Rprot.grid,Rmrna.grid)
rsq.grid <- matrix(pop.cor/sqrt(Rgrid[,1]*Rgrid[,2]),nrow=length(Rprot.grid))^2

rsq.grid[rsq.grid>1] <- 1
pdf("Figs/5e-noise-correction.pdf")
par(mar=c(6.1,5.1,4.1,2.1))
cols <- c("#08306B","#08519C","#2171B5","#4292C6","#9ECAE1")
cols2 <- rep(cols,each=2)
cols <- sapply(1:9,function(i) avg.colors(cols2[i],cols2[i+1]))

plot(0,xlim=c(pop.cor^2,1),ylim=c(pop.cor^2,1),xlab="Reliability of mRNA Measurements",ylab="Reliability of Protein Measurements",main="Fraction of Across-Tissue Protein Variance\n Explained By Transcript Levels",cex.lab=2,cex.axis=1.5,cex.main=1.5,xaxs="i",yaxs="i")
out.prev <- curve(pop.cor^2/x,from=0.1,to=1,col="red",lwd=3,n=1000,add=TRUE)
polygon(c(0,out.prev$x,1),c(0,out.prev$y,0),density = c(10, 20), angle = c(45, -45))
count <- 1
for(cur in seq(0.9,0.1,by=-0.1)){
    col <- cols[count]
    out.cur <- curve(pop.cor^2/(cur*x),from=0.1,to=1,lwd=1,lty=2,col="black",n=1000,add=TRUE)
    polygon(c(out.prev$x,rev(out.cur$x)),c(out.prev$y,rev(out.cur$y)),col=col,lty=0)
    out.prev <- out.cur
    count <- count+1
}
null.line <- curve(pop.cor^2/x,from=0.1,to=1,col="red",lwd=3,n=1000,add=TRUE)
text(0.9,0.9,"10",cex=1.5,col="dark grey",srt=-45)
text(0.75,0.72,"20",cex=1.5,col="dark grey",srt=-45)
text(0.65,0.6,"30",cex=1.5,col="dark grey",srt=-45)
text(0.58,0.53,"40",cex=1.5,col="dark grey",srt=-45)
text(0.52,0.47,"50",cex=1.5,col="dark grey",srt=-45)
text(0.48,0.43,"60",cex=1.2,col="dark grey",srt=-45)
text(0.45,0.40,"70",cex=1.2,col="dark grey",srt=-45)
text(0.43,0.37,"80",cex=1,col="dark grey",srt=-45)
text(0.41,0.35,"90",cex=1,col="dark grey",srt=-45)
rect(0.18,0.22,0.35,0.32,col="white",lty=1)
text(0.27,0.27,"100%",cex=2,col="dark grey")
dev.off() 

## Compute mrna reliabilities
mrna.reliabilities <- sapply(1:nrow(msplit1),function(i) cor(msplit1[i,],msplit2[i,],use="pairwise.complete.obs"))
    names(mrna.reliabilities) <- rownames(msplit1)
med.mrna <- median(mrna.reliabilities,na.rm=TRUE)
print(med.mrna)

pdf("Figs/mrna_reliabilities.pdf")
ggplot(data.frame(x=mrna.reliabilities))+geom_histogram(aes(x=x,fill="mRNA"),colour="black",binwidth=0.05,size=0.1)+labs(x="Reliability",y="",title=expression(paste("mRNA Reliabilities, Median = ",med.mrna,sep="")))+
    theme(title = element_text(size=20),
          axis.title.x = element_text(face="bold",size=25),
          axis.text.x  = element_text(size=16),
          axis.text.y  = element_text(size=16,hjust=0)) +
    scale_x_continuous(limits=c(-1,1))+
    guides(fill=FALSE)
dev.off()

## Compute protein reliabilities
pcols <- intersect(colnames(protein),colnames(protein2))
prows <- intersect(rownames(protein),rownames(protein2))
cts <- apply(protein[prows,pcols]*protein2[prows,pcols],1,function(x) sum(!is.na(x)))
prows <- prows[cts>4]
protein.reliabilities <- sapply(prows,function(i) cor(protein[i,pcols],protein2[i,pcols],use="pairwise.complete.obs"))
med.prot <- median(protein.reliabilities,na.rm=TRUE)
print(med.prot)

pdf("Figs/protein_reliabilities.pdf")
ggplot(data.frame(x=protein.reliabilities))+geom_histogram(aes(x=x,fill="mRNA"),colour="black",binwidth=0.05,size=0.1)+labs(x="Reliability",y="",title=expression(paste("Protein Reliabilities, Median = ",med.prot,sep="")))+
    theme(title = element_text(size=20),
          axis.title.x = element_text(face="bold",size=25),
          axis.text.x  = element_text(size=16),
          axis.text.y  = element_text(size=16,hjust=0)) +
    scale_x_continuous(limits=c(-1,1))+
    guides(fill=FALSE)
dev.off()


## protein 2
p2.cors <- sapply(prows,function(i) cor(protein2[i,pcols],mrna[i,pcols],use="pairwise.complete.obs"))
med.p2 <- median(p2.cors,na.rm=TRUE)
print(med.p2)

tmp <- sapply(prows,function(i) cor(protein2[i,pcols],mrna[i,pcols],use="pairwise.complete.obs"))
tmp <- tmp[tmp!=1&tmp!=-1&!is.na(tmp)]

## Estimated reliabilities
p1.reliability <- med.prot*pop.cor/med.p2
p2.reliability <- med.prot*med.p2/pop.cor



@ 

\noindent Reliability of \Sexpr{focus.data} is: \Sexpr{format(p1.reliability,digits=2,nsmall=2)}\\
Reliability of \Sexpr{data2} is: \Sexpr{format(p2.reliability,digits=2,nsmall=2)}

\begin{figure}
\centering
\begin{subfigure}{.3\textwidth}
  \centering
  \includegraphics[width=\textwidth]{\string Figs/mrna_reliabilities.pdf}
  \caption{mRNA reliability = \Sexpr{round(med.mrna,2)}}
  \label{fig:sub1}
\end{subfigure}%
\begin{subfigure}{.3\textwidth}
  \centering
  \includegraphics[width=\textwidth]{\string Figs/protein_reliabilities.pdf}
  \caption{Protein reliability = \Sexpr{round(med.prot,2)}}
  \label{fig:sub2}
\end{subfigure}
\begin{subfigure}{.3\textwidth}
  \centering
  \includegraphics[width=\textwidth]{\string Figs/5e-noise-correction.pdf}
  \caption{}
  \label{fig:sub2}
\end{subfigure}
\caption{Noise corrected correlation = \Sexpr{round(pop.cor/sqrt(med.mrna*med.prot),2)}}
\label{fig:test}
\end{figure}


\section*{Figures S1}
<<fig.show='hide',label=figure-s1, dependson("initialize"),echo=FALSE,warning=FALSE, results='hide'>>=

## noise corrected 
sd.mrnas <- apply(mrna, 1, function(x) sd(x,na.rm=TRUE))
sd.prots <- apply(protein, 1, function(x) sd(x,na.rm=TRUE))
## temporary
sd.mrnas.corrected <- sqrt(sd.mrnas^2*med.mrna)
sd.prots.corrected <- sqrt(sd.prots^2*p1.reliability)
sd.diffs.corrected <- sd.prots.corrected-sd.mrnas.corrected

pdf("Figs/physiological_sds.pdf")
ggplot(data.frame(x=sd.mrnas.corrected,x2=sd.prots.corrected),labels=c("mRNA","protein"))+geom_histogram(aes(x=x,fill="mRNA"),binwidth=0.03,colour="black",size=0.1,alpha=1)+geom_histogram(aes(x=x2,fill="protein"),binwidth=0.03,colour="black",size=0.1,alpha=0.5)+scale_x_continuous(limits=c(0,1.5))+labs(x="Standard Deviation",y="Count")+
    theme(axis.title.x = element_text(face="bold",size=25),
          axis.text.x  = element_text(size=16),
          axis.title.y = element_text(face="bold",size=25),
          axis.text.y  = element_text(size=16,hjust=0),
          legend.text=element_text(size = 20, face = "bold"),
          legend.position=c(0.8,0.9))+
         guides(fill=guide_legend(title=NULL))
dev.off()

pdf("Figs/sds-diff.pdf")
ggplot(data.frame(x=(sd.prots.corrected-sd.mrnas.corrected)))+geom_histogram(aes(x=x,fill="protein-mRNA"),binwidth=0.05,colour="black",size=0.1,alpha=1)+
    scale_x_continuous(limits=c(-1.5,1.5))+
labs(x="Difference in Standard Deviation",y="Count")+
    theme(axis.title.x = element_text(face="bold",size=25),
          axis.text.x  = element_text(size=16),
          axis.title.y = element_text(face="bold",size=25),
          axis.text.y  = element_text(size=16,hjust=0),
          legend.text=element_text(size = 20, face = "bold"),
          legend.position=c(0.8,0.9))+
     guides(fill=guide_legend(title=NULL))+geom_vline(xintercept=0,size=1.5)
dev.off()

median(sd.prots.corrected/sd.mrnas.corrected,na.rm=TRUE)
@ 

\begin{figure}
\centering
\begin{subfigure}{.4\textwidth}
  \centering
  \includegraphics[width=\textwidth]{\string Figs/physiological_sds.pdf}
  \caption{A subfigure}
  \label{fig:sub1}
\end{subfigure}%
\begin{subfigure}{.4\textwidth}
  \centering
  \includegraphics[width=\textwidth]{\string Figs/sds-diff.pdf}
  \caption{A subfigure}
  \label{fig:sub2}
\end{subfigure}
\caption{A figure with two subfigures}
\label{fig:test}
\end{figure}

<<results='asis',fig.show='hide',label=associations-1, dependson("initialize"),echo=FALSE,warning=FALSE>>=

fdr.thresh <- 0.02

load("associations.RData")
allGroups <- unique(unlist(getGroupsForProtein(rownames(protein),ensembl=TRUE)))
glen <- sapply(group2proteins,function(x) length(unlist(x)))

pvals <- rep(NA,length(allGroups))
med.z <- rep(NA,length(allGroups))
med.cor <- rep(NA,length(allGroups))
med.sd.mrna <- med.sd.prot <- rep(NA,length(allGroups))
                                  
names(pvals) <- names(med.z) <- names(med.cor) <- names(med.sd.mrna) <- names(med.sd.prot) <- allGroups

for(grp in allGroups) {
    prots <- intersect(n2e(group2proteins[[grp]]),names(z.score))
    if(length(prots)>5 & length(prots) < 200 ) {
        res <- ks.test(z.score[prots],z.score[setdiff(names(z.score),prots)])
        pvals[grp] <- res$p.value
        med.z[grp] <- median(z.score[prots],na.rm=TRUE)
        med.cor[grp] <- median(within.cors[prots],na.rm=TRUE)
        med.sd.mrna[grp] <- median(sd.mrnas[prots],na.rm=TRUE)
        med.sd.prot[grp] <- median(sd.prots[prots],na.rm=TRUE)
    }
}
pvals <- pvals[!is.na(pvals)]
sorted.pvals <- sort(pvals)
M <- length(sorted.pvals)
out <- fdrtool(pvals,"pvalue")
qvals <- sorted.pvals/((1:M)/M)
qvals <- qvals[qvals<fdr.thresh]

med.z <- med.z[names(qvals)]
med.cor <- med.cor[names(qvals)]
med.sd.mrna <- med.sd.mrna[names(qvals)]
med.sd.prot <- med.sd.prot[names(qvals)]

nms <- sapply(names(qvals),function(x) substr(go.names[match(x,go.names[,1]),3],1,30))

atable <- data.frame(Name=as.factor(nms),"Median Z-Score"=med.z,"Median Correlation"=med.cor,"Median mRNA SD"=med.sd.mrna,"Median protein SD"=med.sd.prot,"Q-value"=qvals,"P-value"=sorted.pvals[names(nms)],"Number of Genes"=glen[names(nms)])
colnames(atable) <- c("Name","Median Z-Score","Median Correlation","Median mRNA SD","Median Protein SD","Q-value","P-value","Numer of Genes")

xtab <- xtable(atable[order(atable[,3]),c(1:3,6:8)],display=c("s","s","f","f","g","g","d"),digits=c(0,0,2,2,2,2,2))

print(xtab,type='latex',floating.environment = 'sidewaystable',hline.after=c(0,nrow(atable)-sum(med.cor>pop.cor)))


cors.tmp <- cat.tmp <- c()

## show just a sample of the groups
toinclude <- names(med.cor)[c(sort(sample(which(med.cor<pop.cor),3)),which(med.cor>pop.cor))]

for(grp in toinclude) {
     prots <- intersect(n2e(group2proteins[[grp]]),names(z.score))
     cors.tmp <- c(cors.tmp,within.cors[prots])
     cat.tmp <- c(cat.tmp,nms[rep(grp,length(prots))])
}

df <- data.frame(list(cors=cors.tmp,cat=factor(cat.tmp,levels=unique(cat.tmp),ordered=TRUE)))

pdf("Figs/go_corrs.pdf",width=10,height=5)
print(
    ggplot(df, aes(x = cat, y = cors))+geom_hline(yintercept=0.28,colour="red",lwd=1.5) + geom_boxplot(aes(x=cat,y=cors),outlier.size=0)+labs(x="",y="Correlation")+theme(axis.text.x = element_text(angle = 45,hjust=1))
)
dev.off()

@ 

\begin{figure}
\centering
  \includegraphics[width=0.5\textwidth]{\string Figs/go_corrs.pdf}
  \caption{A subfigure}
  \label{fig:sub1}
\end{figure}

\end{document}

